- all_albums = elem.albums.uniq
- all_tracks = all_albums.map{|alb| alb.audio_files.limit_to(elem) }.flatten
.elem.Artist{ 'data-elem_id' => "#{elem.class.to_s.tableize}-#{elem.id}" } 
  .elem-data
    .name
      = link_to elem.name, artist_path(elem.id), :class => 'link-name'
      %span{ :class => 'artist-subname' }
        = '(' + pluralize(all_albums.size,'album') + ')'
      %span{ :class => 'artist-subname' }
        = '(' + pluralize(all_tracks.size,'track') + ')'
  .elem-content
    %ul
      - solo = elem.solo_albums.uniq
      - mult = elem.albums.uniq - solo
      -# mult,solo = elem.albums.uniq.partition{|a| a.artists.uniq.size != 1}
    
      - solo.each do |alb|
        = render :partial => 'artists/album', :object => alb, :locals => { :artist => elem }
      - mult.each do |alb|
        = render :partial => 'artists/album', :object => alb, :locals => { :artist => elem }

